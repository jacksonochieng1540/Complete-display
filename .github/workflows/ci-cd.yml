name: Django CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
      DEBUG: 'True'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Wait for Postgres to accept connections
        run: |
          # simple TCP check using Python (python is available after setup-python)
          for i in $(seq 1 30); do
            python - <<'PY'
import socket, sys
s = socket.socket()
try:
    s.settimeout(1)
    s.connect(("127.0.0.1", 5432))
    s.close()
    sys.exit(0)
except:
    sys.exit(1)
PY
            if [ $? -eq 0 ]; then echo "Postgres is up"; break; fi
            echo "Waiting for Postgres... ($i/30)"; sleep 1
          done

      - name: Install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements.txt

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: docker-compose -f docker-compose.prod.yml build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker images
        run: |
          docker tag django-docker-project_web ${{ secrets.DOCKERHUB_USERNAME }}/django-app:latest
          docker tag django-docker-project_nginx ${{ secrets.DOCKERHUB_USERNAME }}/django-nginx:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/django-nginx:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production server..."
          # Add your deployment commands here
